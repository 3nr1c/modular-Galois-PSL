
# q-expansion of newform 43.5.b.b, downloaded from the LMFDB on 25 February 2022.

# We generate the q-expansion using the Hecke eigenvalues a_p at the primes.
# Each a_p is given as a linear combination
# of the following basis for the coefficient ring.
# To create the q-expansion as a power series, type "qexp = make_data()"

def make_data():
    from sage.all import prod, floor, prime_powers, gcd, QQ, primes_first_n, next_prime, RR

    def discrete_log(elts, gens, mod):
        # algorithm 2.2, page 16 of https://arxiv.org/abs/0903.2785
        def table_gens(gens, mod):
            T = [1]
            n = len(gens)
            r = [None]*n
            s = [None]*n
            for i in range(n):
                beta = gens[i]
                r[i] = 1
                N = len(T)
                while beta not in T:
                    for Tj in T[:N]:
                        T.append((beta*Tj) % mod)
                    beta = (beta*gens[i]) % mod
                    r[i] += 1
                s[i] = T.index(beta)
            return T, r, s
        T, r, s = table_gens(gens, mod)
        n = len(gens)
        N = [ prod(r[:j]) for j in range(n) ]
        Z = lambda s: [ (floor(s/N[j]) % r[j]) for j in range(n)]
        return [Z(T.index(elt % mod)) for elt in elts]
    def extend_multiplicatively(an):
        for pp in prime_powers(len(an)-1):
            for k in range(1, (len(an) - 1)//pp + 1):
                if gcd(k, pp) == 1:
                    an[pp*k] = an[pp]*an[k]
    from sage.all import PolynomialRing, NumberField, ZZ
    R = PolynomialRing(QQ, "x")
    f = R(poly_data)
    K = NumberField(f, "a")
    betas = [K([c/ZZ(den) for c in num]) for num, den in basis_data]
    convert_elt_to_field = lambda elt: sum(c*beta for c, beta in zip(elt, betas))
    # convert aps to K elements
    primes = primes_first_n(len(aps_data))
    good_primes = [p for p in primes if not p.divides(level)]
    aps = map(convert_elt_to_field, aps_data)
    if not hecke_ring_character_values:
        # trivial character
        char_values = dict(zip(good_primes, [1]*len(good_primes)))
    else:
        gens = [elt[0] for elt in hecke_ring_character_values]
        gens_values = [convert_elt_to_field(elt[1]) for elt in hecke_ring_character_values]
        char_values = dict([(
            p,prod(g**k for g, k in zip(gens_values, elt)))
            for p, elt in zip(good_primes, discrete_log(good_primes, gens, level))
            ])
    an_list_bound = next_prime(primes[-1])
    an = [0]*an_list_bound
    an[1] = 1
    
    from sage.all import PowerSeriesRing
    PS = PowerSeriesRing(K, "q")
    for p, ap in zip(primes, aps):
        if p.divides(level):
            euler_factor = [1, -ap]
        else:
            euler_factor = [1, -ap, p**(weight - 1) * char_values[p]]
        k = RR(an_list_bound).log(p).floor() + 1
        foo = (1/PS(euler_factor)).padded_list(k)
        for i in range(1, k):
            an[p**i] = foo[i]
    extend_multiplicatively(an)
    return PS(an)
level  =  43
weight  =  5
poly_data  =  [90352, 0, 5098688, 0, 1510016, 0, 157368, 0, 7173, 0, 142, 0, 1]

# The entries in the following list give a basis for the
# coefficient ring in terms of a root of the defining polynomial above.
# Each line consists of the coefficients of the numerator, and a denominator.
basis_data   =  [\
[[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 1],
[[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 1],
[[24, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0], 1],
[[4858167448, 0, 3190508236, 0, 249791190, 0, 3751835, 0, -51724, 0, -1013, 0], 218680368],
[[0, 48750171768, 0, 12979904372, 0, 1256312182, 0, 54814785, 0, 1060068, 0, 7373], 437360736],
[[2072740888, 0, -3108074228, 0, -669406178, 0, -42059193, 0, -1003616, 0, -8029, 0], 218680368],
[[0, -40002957048, 0, -12761224004, 0, -1256312182, 0, -54814785, 0, -1060068, 0, -7373], 218680368],
[[-1347066320, 0, -1457233216, 0, -262452874, 0, -16704679, 0, -397873, 0, -3124, 0], 54670092],
[[-4421146200, 0, 5715018932, 0, 1342893190, 0, 86326317, 0, 2019468, 0, 15593, 0], 218680368],
[[0, -28475128152, 0, -10485382436, 0, -1285172518, 0, -65318629, 0, -1379868, 0, -10113], 145786912],
[[0, -193079423624, 0, -63796972524, 0, -6867724298, 0, -313089127, 0, -6156292, 0, -43059], 437360736],
[[0, -897659100328, 0, -239736846012, 0, -23117282490, 0, -996377731, 0, -18990012, 0, -130223], 437360736]]

hecke_ring_character_values  =  [\
[3, [-1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]]
aps_data  =  [\
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0],
[0, -1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0],
[0, -2, 0, 0, 2, 0, 0, 0, 0, 0, -1, 0],
[-14, 0, -3, -1, 0, 1, 0, 1, -1, 0, 0, 0],
[-19, 0, 4, 4, 0, -3, 0, -4, 2, 0, 0, 0],
[55, 0, 3, -9, 0, 3, 0, 6, 2, 0, 0, 0],
[0, -2, 0, 0, 4, 0, 0, 0, 0, -1, 2, 1],
[120, 0, 14, 15, 0, 2, 0, 8, -9, 0, 0, 0],
[0, 11, 0, 0, -13, 0, -2, 0, 0, -2, 3, 3],
[492, 0, 2, -32, 0, -3, 0, -25, -1, 0, 0, 0],
[0, 30, 0, 0, -33, 0, 8, 0, 0, -30, 15, -4],
[415, 0, -19, 57, 0, -16, 0, -34, 26, 0, 0, 0],
[-74, 32, -11, 20, -61, 15, -8, -26, 49, -17, 13, 3],
[-492, 0, 51, -21, 0, -18, 0, 24, -72, 0, 0, 0],
[95, 0, -100, 41, 0, 15, 0, 75, 28, 0, 0, 0],
[1182, 0, -52, -77, 0, -2, 0, 31, -60, 0, 0, 0],
[0, -289, 0, 0, -54, 0, 38, 0, 0, -88, -44, 3],
[-52, 0, -57, -193, 0, -45, 0, -5, -59, 0, 0, 0],
[0, -352, 0, 0, 90, 0, -12, 0, 0, -162, -30, 12],
[0, -473, 0, 0, -230, 0, -14, 0, 0, 122, -46, -1],
[2042, 0, -191, 284, 0, 3, 0, 1, 190, 0, 0, 0],
[-628, 0, -35, -42, 0, 121, 0, 202, -203, 0, 0, 0],
[0, -131, 0, 0, -206, 0, 20, 0, 0, 190, -30, 15],
[-489, 0, 311, -18, 0, 48, 0, -165, 6, 0, 0, 0],
[-2021, 0, 152, 217, 0, 91, 0, -281, 224, 0, 0, 0],
[-2460, 0, -54, -60, 0, 12, 0, 327, 63, 0, 0, 0],
[-344, 0, 156, -293, 0, -52, 0, -37, 182, 0, 0, 0],
[1087, 0, -370, 18, 0, -15, 0, -12, 408, 0, 0, 0],
[0, -1574, 0, 0, 780, 0, -6, 0, 0, 120, 30, -30],
[2132, 0, 42, 645, 0, -261, 0, -78, -453, 0, 0, 0],
[0, -1824, 0, 0, 263, 0, -38, 0, 0, -72, 189, -18],
[0, -26, 0, 0, 452, 0, -170, 0, 0, -64, -102, -30],
[5046, 0, -107, -712, 0, -63, 0, -32, -473, 0, 0, 0],
[0, 1846, 0, 0, -869, 0, 146, 0, 0, -58, -57, 42],
[0, -4142, 0, 0, -1028, 0, -44, 0, 0, -178, -133, -22],
[0, -2172, 0, 0, -982, 0, -42, 0, 0, -61, 270, -47],
[0, 1360, 0, 0, -674, 0, -216, 0, 0, -349, 35, -17],
[-17804, 0, -495, -714, 0, -399, 0, 66, -835, 0, 0, 0],
[8928, 0, -150, 644, 0, 280, 0, 166, -294, 0, 0, 0],
[0, 7018, 0, 0, 942, 0, 54, 0, 0, -657, 111, -57],
[6952, 0, 674, -909, 0, -564, 0, -1137, -390, 0, 0, 0],
[0, 2216, 0, 0, 2602, 0, 176, 0, 0, 862, -354, 30],
[-22063, 0, -1173, 958, 0, -234, 0, -73, -16, 0, 0, 0],
[-13008, 0, 706, -275, 0, 522, 0, 1773, -6, 0, 0, 0],
[0, -942, 0, 0, -630, 0, -502, 0, 0, -222, 252, -34],
[0, 7038, 0, 0, -861, 0, 28, 0, 0, -120, 3, 70],
[0, -4158, 0, 0, -1390, 0, 188, 0, 0, -1270, 615, 24],
[0, 1992, 0, 0, 1020, 0, 354, 0, 0, 235, 480, 117],
[-16797, 0, -962, 208, 0, -633, 0, -274, -1036, 0, 0, 0],
[0, -208, 0, 0, -1896, 0, 72, 0, 0, 1708, 192, -168],
[-3914, 0, -935, -916, 0, 707, 0, -499, -142, 0, 0, 0],
[0, -6934, 0, 0, -1370, 0, 80, 0, 0, 1134, 16, -118],
[-8920, 0, -649, 537, 0, 917, 0, -1447, 1321, 0, 0, 0],
[0, -2337, 0, 0, 896, 0, 430, 0, 0, -728, -636, 93],
[0, 206, 0, 0, -960, 0, 414, 0, 0, 844, -750, -156],
[33681, 0, 134, 1930, 0, -1217, 0, -620, -510, 0, 0, 0],
[28674, 0, -656, -2090, 0, 60, 0, 2231, -1183, 0, 0, 0],
[0, 4581, 0, 0, -2888, 0, -30, 0, 0, 1861, 312, 44],
[5901, 0, 1505, 1920, 0, 935, 0, 779, 2436, 0, 0, 0],
[1106, 0, 917, 1008, 0, -63, 0, -3060, 315, 0, 0, 0],
[-10974, 0, -2710, 1511, 0, -306, 0, -3525, 972, 0, 0, 0],
[-288, 0, 1013, -466, 0, 2169, 0, 598, -1151, 0, 0, 0],
[-14036, 0, 1977, -817, 0, -233, 0, -4067, 2417, 0, 0, 0],
[0, 4085, 0, 0, 1754, 0, 416, 0, 0, -2960, -32, 163],
[-7423, 0, 756, -2046, 0, -117, 0, 1902, -2546, 0, 0, 0],
[0, 9562, 0, 0, 7980, 0, -568, 0, 0, 1582, 335, -212],
[137, 0, 1527, 2596, 0, 1551, 0, 1325, -412, 0, 0, 0],
[0, -1818, 0, 0, 7192, 0, -466, 0, 0, 835, -777, -15],
[0, 6979, 0, 0, -8939, 0, -954, 0, 0, 704, 95, 379],
[-10711, 0, -2170, -2660, 0, -707, 0, 3766, 442, 0, 0, 0],
[-65754, 0, -2156, 2524, 0, 1203, 0, 477, 549, 0, 0, 0],
[84226, 0, -1937, 3367, 0, 1656, 0, -208, 2654, 0, 0, 0],
[0, -1282, 0, 0, 13376, 0, -144, 0, 0, -509, 754, 107],
[-105386, 0, -1695, -795, 0, 231, 0, 3855, -1485, 0, 0, 0],
[0, -7750, 0, 0, -5412, 0, 534, 0, 0, -2986, 66, -294],
[0, -4884, 0, 0, -166, 0, 1126, 0, 0, -438, 3174, 252],
[4856, 0, 1896, 3837, 0, -2598, 0, -45, -3786, 0, 0, 0],
[-47273, 0, -2705, 548, 0, -1015, 0, -5059, 1946, 0, 0, 0],
[0, 4343, 0, 0, -5796, 0, -372, 0, 0, 3188, -164, -629],
[0, -15452, 0, 0, -4310, 0, -70, 0, 0, -2936, -1749, -168],
[0, 11676, 0, 0, 5810, 0, -2232, 0, 0, -3247, -870, -47],
[13914, 0, 6214, -4471, 0, 1085, 0, 2906, 585, 0, 0, 0],
[0, -24403, 0, 0, 4774, 0, 194, 0, 0, 4236, 2488, -7],
[68064, 0, 8392, -2364, 0, -531, 0, -615, -2793, 0, 0, 0],
[138392, 0, 2244, 3653, 0, 322, 0, -3695, 4174, 0, 0, 0],
[0, -25811, 0, 0, -146, 0, -178, 0, 0, -2384, 288, 213],
[0, 32853, 0, 0, 7158, 0, 248, 0, 0, -3744, -2946, 77],
[124286, 0, -4732, -5343, 0, 1184, 0, 6611, -3428, 0, 0, 0],
[0, 25696, 0, 0, -7262, 0, -706, 0, 0, 2486, -2239, 48],
[0, 20842, 0, 0, 3769, 0, 200, 0, 0, -3874, 1821, 234],
[41176, 0, -11120, -2247, 0, 844, 0, -1124, 7763, 0, 0, 0],
[-47488, 0, 3655, -4643, 0, 4317, 0, -3826, -4516, 0, 0, 0],
[0, -14480, 0, 0, -16332, 0, 396, 0, 0, -449, 3375, -435],
[0, 12062, 0, 0, -4285, 0, 1494, 0, 0, 370, 898, -796],
[0, 49714, 0, 0, 12666, 0, 762, 0, 0, -3446, -240, -192],
[-34049, 0, 1382, -3867, 0, -5929, 0, -979, -2464, 0, 0, 0],
[0, -9971, 0, 0, 9520, 0, 1724, 0, 0, -3302, -3084, -429],
[0, -34744, 0, 0, 2505, 0, -1568, 0, 0, 3050, 2332, -16],
[58513, 0, -5106, 669, 0, 201, 0, 2577, 5682, 0, 0, 0],
[10600, 0, -3669, -3038, 0, -363, 0, 2720, -499, 0, 0, 0],
[-72387, 0, -13720, 7664, 0, -3039, 0, 9108, 4602, 0, 0, 0],
[-56826, 0, 3633, 13133, 0, 1987, 0, -4493, 8859, 0, 0, 0],
[28173, 0, 1822, -1405, 0, 1319, 0, -9505, 2430, 0, 0, 0],
[0, -560, 0, 0, 15857, 0, -200, 0, 0, -666, -2974, 304],
[0, -44517, 0, 0, -10486, 0, 1758, 0, 0, 5270, -4530, 523],
[0, 55056, 0, 0, 4688, 0, -2096, 0, 0, 8128, -5772, -414],
[0, -37479, 0, 0, 6154, 0, 2090, 0, 0, 6384, 1410, 15],
[34440, 0, -9696, -2387, 0, -1609, 0, -2848, -3741, 0, 0, 0],
[0, 4942, 0, 0, 15932, 0, 1536, 0, 0, -4512, 4094, -192],
[0, 28842, 0, 0, 6142, 0, -2106, 0, 0, 3346, 696, -94],
[231726, 0, -984, -6491, 0, 4920, 0, 7271, 3308, 0, 0, 0],
[-141933, 0, 9969, -3260, 0, -2698, 0, -3169, 3990, 0, 0, 0],
[36742, 0, 1556, 4276, 0, -5238, 0, -514, -7984, 0, 0, 0],
[0, -4402, 0, 0, -7954, 0, -1578, 0, 0, -8858, 2272, 1868],
[0, -28131, 0, 0, -20102, 0, -460, 0, 0, 6834, -816, -759],
[100514, 0, 17660, -3525, 0, 2502, 0, 2211, 4128, 0, 0, 0],
[0, -11640, 0, 0, 14498, 0, 976, 0, 0, 260, -2154, -1332],
[0, 110, 0, 0, -4120, 0, -908, 0, 0, -2231, -3582, -891],
[117362, 0, -17467, 7829, 0, -1485, 0, 5883, -7049, 0, 0, 0],
[-179585, 0, -8320, -6169, 0, 5421, 0, 6613, -9452, 0, 0, 0],
[0, 82163, 0, 0, -1866, 0, 1878, 0, 0, 3542, -572, -1115],
[0, -8980, 0, 0, 1994, 0, -2384, 0, 0, -1947, -1254, -447],
[-69382, 0, -7751, 2233, 0, 5583, 0, 9627, 20167, 0, 0, 0],
[0, -39062, 0, 0, -19730, 0, -3260, 0, 0, -400, -1705, -196],
[154182, 0, -21780, -12097, 0, -3806, 0, 1813, 5580, 0, 0, 0],
[43111, 0, 11238, 1264, 0, -4017, 0, -4918, -5776, 0, 0, 0],
[-139412, 0, -7341, -13518, 0, -9648, 0, 2109, -2380, 0, 0, 0],
[0, 14348, 0, 0, -27596, 0, 1240, 0, 0, -966, -2924, -212],
[0, -57948, 0, 0, 31151, 0, -190, 0, 0, -2668, -819, -1296],
[0, -63000, 0, 0, -3215, 0, -2966, 0, 0, -2750, 1311, 690],
[0, -17092, 0, 0, 18198, 0, 1644, 0, 0, 7452, 1326, 1956],
[0, -21178, 0, 0, -9374, 0, 2952, 0, 0, -15672, -2555, -498],
[0, 7272, 0, 0, 11557, 0, 50, 0, 0, -22988, -2589, -488],
[0, 74958, 0, 0, -3786, 0, -4158, 0, 0, 6510, -1896, 132],
[31498, 0, -14135, 11715, 0, 2700, 0, 9708, 15666, 0, 0, 0],
[0, 93859, 0, 0, 13763, 0, -2690, 0, 0, -9124, 4209, 87],
[352180, 0, 6650, 3879, 0, -2244, 0, -18963, 9318, 0, 0, 0],
[-33262, 0, 31430, 22793, 0, -876, 0, 7653, -10100, 0, 0, 0],
[287614, 0, 13671, -6373, 0, 8416, 0, 10882, -25654, 0, 0, 0],
[0, 80002, 0, 0, -22250, 0, -3330, 0, 0, 14945, 929, 1105],
[-277793, 0, 24438, 2746, 0, -1819, 0, -1696, -23920, 0, 0, 0],
[-400936, 0, 6617, 14711, 0, -8553, 0, -11207, 11701, 0, 0, 0],
[65948, 0, 22418, -4204, 0, 7758, 0, 1932, -11510, 0, 0, 0],
[0, 78988, 0, 0, -17437, 0, 2736, 0, 0, -14076, -2779, -186],
[0, -48876, 0, 0, -17002, 0, -3806, 0, 0, -3128, 8601, -246],
[7731, 0, 9352, -14861, 0, 5193, 0, -19771, 8432, 0, 0, 0],
[609070, 0, -14193, -20477, 0, -5935, 0, -3790, 5726, 0, 0, 0],
[0, 18586, 0, 0, -10380, 0, -2792, 0, 0, 17089, -6154, -2733],
[0, -10106, 0, 0, -16900, 0, 2890, 0, 0, 4950, -1926, -300],
[-337475, 0, -10916, -17929, 0, -7365, 0, -803, -6326, 0, 0, 0],
[-286239, 0, 10243, 2796, 0, 835, 0, 5821, 8364, 0, 0, 0],
[66812, 0, -23673, -5879, 0, 1821, 0, -3403, -26155, 0, 0, 0],
[0, -12914, 0, 0, -40010, 0, -2830, 0, 0, 18196, -696, 1218],
[-88808, 0, -10497, -4968, 0, 5547, 0, -29118, 17445, 0, 0, 0],
[0, -134516, 0, 0, -16890, 0, 5982, 0, 0, 22180, -5961, -72],
[-502920, 0, 8272, -8423, 0, -33, 0, 23048, -3541, 0, 0, 0],
[0, -107766, 0, 0, -41242, 0, -1628, 0, 0, -26908, 6528, 1152],
[0, -121011, 0, 0, 13860, 0, 8976, 0, 0, 3078, 2400, -1473],
[-69455, 0, -2246, -29812, 0, -7255, 0, 5618, -10582, 0, 0, 0],
[-110138, 0, -1637, 870, 0, 15739, 0, -16040, -14173, 0, 0, 0],
[0, 41529, 0, 0, -24394, 0, 7234, 0, 0, 762, -3156, 4263],
[252094, 0, -17462, 35644, 0, -6618, 0, -13993, 21593, 0, 0, 0],
[-286016, 0, 15889, 11109, 0, 2581, 0, -12701, 28661, 0, 0, 0],
[186750, 0, -4379, 36771, 0, -3632, 0, 8416, -12114, 0, 0, 0],
[0, -27134, 0, 0, -25190, 0, 3512, 0, 0, -13544, -2421, -2724],
[0, -112466, 0, 0, -9758, 0, -9768, 0, 0, 3812, -8653, -2618],
[0, -102873, 0, 0, -74343, 0, -5264, 0, 0, -13986, 7821, -155]]
